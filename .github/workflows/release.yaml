name: 'Release'

on:
  push:
    tags:
      - "v*.*.*"

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-changelog:
    name: Generate changelog
    runs-on: ubuntu-22.04
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v3
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --no-exec --github-repo ${{ github.repository }}

  build:
    needs: generate-changelog
    permissions:
      contents: write
      pages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install Linux build dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf imagemagick
          pnpm config set script-shell "/usr/bin/bash"

      - name: Install latest ImageMagick
        if: matrix.platform == 'ubuntu-22.04'
        uses: mfinelli/setup-imagemagick@v5
        with:
          cache: true

      - name: Install Windows build dependencies
        if: matrix.platform == 'windows-latest'
        run: |
          choco install -y imagemagick
          pnpm config set script-shell "C:\\Program Files\\git\\bin\\bash.exe"

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Setup Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Extract and migrate game files
        run: ./ci/setup.sh

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

        with:
          tagName: chromatic-poe-v__VERSION__
          releaseName: 'Chromatic PoE v__VERSION__'
          releaseBody: "${{ needs.generate-changelog.outputs.release_body }}"
          releaseDraft: true
          prerelease: false
          includeUpdaterJson: true
          updaterJsonPreferNsis: true
          args: ${{ matrix.args }}

      - name: Build for Github Pages
        if: matrix.platform == 'ubuntu-22.04'
        run: pnpm build:gh-pages

      - name: Upload static files as artifact
        if: matrix.platform == 'ubuntu-22.04'
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

      - name: Deploy to GitHub Pages
        if: matrix.platform == 'ubuntu-22.04'
        uses: actions/deploy-pages@v4